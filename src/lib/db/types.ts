/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Comments {
  content: string;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  post_id: number;
  updated_at: Generated<Timestamp>;
  user_id: number;
}

export interface Likes {
  created_at: Generated<Timestamp>;
  post_id: number;
  user_id: number;
}

export interface ManualVerifications {
  clerk_user_id: string;
  created_at: Generated<Timestamp>;
  details_text: string | null;
  id: Generated<number>;
  image_url: string | null;
  requested_email: string | null;
  status: Generated<string>;
  user_id: number;
}

export interface Pgmigrations {
  id: Generated<number>;
  name: string;
  run_on: Timestamp;
}

export interface PostImages {
  id: Generated<number>;
  image_url: string;
  order: number;
  post_id: number;
}

export interface Posts {
  content: string;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  is_announcement: Generated<boolean>;
  is_anonymous: Generated<boolean>;
  updated_at: Generated<Timestamp>;
  user_id: number;
}

export interface Reports {
  comment_id: number | null;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  post_id: number | null;
  reason: string;
  reporter_user_id: number;
  status: Generated<string>;
}

export interface Users {
  avatar_url: string | null;
  clerk_id: string;
  created_at: Generated<Timestamp>;
  email: string;
  id: Generated<number>;
  is_verified: Generated<boolean>;
  role: Generated<string>;
  username: string;
}

export interface DB {
  comments: Comments;
  likes: Likes;
  manual_verifications: ManualVerifications;
  pgmigrations: Pgmigrations;
  post_images: PostImages;
  posts: Posts;
  reports: Reports;
  users: Users;
}
